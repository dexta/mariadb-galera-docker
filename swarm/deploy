#!/bin/bash

function show_usage () {
  echo 
  echo "Usage: deploy <galera yml config file>"
  echo 
  echo "Eg: deploy tier1-galera.yml"
  echo 
}

source ./conf $1
if [ $? -ne 0 ]; then
  show_usage
  exit 1
fi
if [ ! -f $WEB_CONFIG ]; then 
  show_usage
  exit 1
fi
if [ -z $STACK_NAME ]; then 
  show_usage
  exit 1
fi

SSH_USER=`sed -n '/^ssh-user:/ {s///p;q;}' $DB_CONFIG | xargs`
SSH_BECOME=`sed -n '/^ssh-become:/ {s///p;q;}' $DB_CONFIG | xargs`

[ -z $GALERA_NETWORK ] && GALERA_NETWORK=10.0.9.0/24
[ -z $GALERA_NETWORK_NAME ] && GALERA_NETWORK_NAME=data_network

[ -z $APP_NETWORK ] && GALERA_NETWORK=10.0.13.0/24
[ -z $APP_NETWORK_NAME ] && GALERA_NETWORK_NAME=web_network

XTRABACKUP_PWD=` cat .secrets/xtrabackup_password`
MYSQL_PWD=` cat .secrets/mysql_password`
MYSQL_ROOT_PWD=` cat .secrets/mysql_root_password`

echo -n "Deploying the galera cluster network: ${GALERA_NETWORK_NAME} ${GALERA_NETWORK}: "
./docker-env network create --driver overlay --subnet $GALERA_NETWORK $GALERA_NETWORK_NAME
echo -n "Deploying the app/proxy network: ${APP_NETWORK_NAME} ${APP_NETWORK}: "
./docker-env network create --driver overlay --subnet $APP_NETWORK $APP_NETWORK_NAME
echo
echo "Deploying the MariaDB Galera ${STACK_NAME} cluster..."
echo
export STACK_FOLDER=stacks

if [ "$USE_VDVS" == "true" ]; then

  echo "vDVS Data Volume Configuration:"
  echo "-------------------------------"

  HOST_NODE_VOL_SIZE=`sed -n '/^host-node-volume-size:/ {s///p;q;}' $DB_CONFIG | xargs`
  [ -z $HOST_NODE_VOL_SIZE ] && HOST_NODE_VOL_SIZE=128gb
  export HOST_NODE_DATASTORE=`sed -n '/^host-node-datastore:/ {s///p;q;}' $DB_CONFIG | xargs`

  echo -n "Creating the ${HOST_NODE_VOL_SIZE} vDVS seed volume for the galera cluster: "
  ./docker-env volume create --driver=vsphere --name=${STACK_NAME}_galera-seed-volume@${HOST_NODE_DATASTORE} -o size=${HOST_NODE_VOL_SIZE}
  for i in `seq 1 3`
  do
    HOST_VOL_NAME=${STACK_NAME}_galera-node${i}-volume
    if [ ! -z HOST_NODE_DATASTORE ]; then
      HOST_VOL_NAME=${HOST_VOL_NAME}@${HOST_NODE_DATASTORE}
    fi
    echo -n "Creating the ${HOST_NODE_VOL_SIZE} vDVS volume for the galera node ${i}: "
    ./docker-env volume create --driver=vsphere --name=$HOST_VOL_NAME -o size=${HOST_NODE_VOL_SIZE} -o fstype=ext4
  done
  echo 

  STACK_FOLDER=${STACK_FOLDER}/vdvs

  echo "MariaDB Galera Service Configuration:"
  echo "-------------------------------------"
  echo
  echo "Deploying mariadb galera stack..."
  echo
  ./docker-env stack deploy -c ${STACK_FOLDER}/mariadb-galera.yml $STACK_NAME
  if [ $? -ne 0 ]; then
    echo "Failure deploying mariadb galera master stack"
    exit 1
  fi
  echo
  echo -n "Waiting for the galera seed node to start up..."
  while [ "`./docker-env service ls | grep ${STACK_NAME}_galera-seed | grep 1/1 | wc -l | xargs`" != "1" ]
  do
    echo -n "."
    sleep 5s
  done
  echo

  echo "Scaling up permanent galera nodes..."
  echo
  ./docker-env service scale --detach ${STACK_NAME}_galera-node1=1
  ./docker-env service scale --detach ${STACK_NAME}_galera-node2=1
  ./docker-env service scale --detach ${STACK_NAME}_galera-node3=1
  if [ $? -ne 0 ]; then
    echo "Failure scaling up remaining galera-node containers"
    exit 1
  fi
  echo
  echo -n "Waiting for permanent galera nodes to start up..."
  while [ "`./docker-env service ls | grep ${STACK_NAME}_galera-node | grep 1/1 | wc -l | xargs`" != "3" ]
  do
    echo -n "."
    sleep 3s
  done
  echo
  echo "Allocating 1m for the initial cluster data sync..."
  sleep 60s
  echo

  echo "Scaling down seed node"
  ./docker-env service scale --detach ${STACK_NAME}_galera-seed=0
  #sleep 10s
  #echo "Removing seed node vDVS volume"
  #./docker-env volume rm ${STACK_NAME}_galera-seed-volume@${HOST_NODE_DATASTORE}
  #sleep 30s
  #echo "Removing seed node"
  #./docker-env service rm ${STACK_NAME}_galera-seed
  #sleep 10s

else 

  echo "Host Data Stack Configuration:"
  echo "------------------------------"
  echo "Host Node 1: ${GALERA_NODE1}"
  echo "Host Node 2: ${GALERA_NODE2}"
  echo "Host Node 3: ${GALERA_NODE3}"
  echo "------------------------------"
  echo "SSH User: ${SSH_USER}, Become: ${SSH_BECOME}"
  echo
  echo "Creating host node data volumes..."
  echo "----------------------------------"
  ssh $SSH_USER@$GALERA_NODE1 "${SSH_BECOME} bash -s -- " < util/make-data-vol 1
  ssh $SSH_USER@$GALERA_NODE1 "${SSH_BECOME} bash -s -- " < util/make-data-vol seed
  ssh $SSH_USER@$GALERA_NODE2 "${SSH_BECOME} bash -s -- " < util/make-data-vol 2
  ssh $SSH_USER@$GALERA_NODE3 "${SSH_BECOME} bash -s -- " < util/make-data-vol 3
  
  echo
  echo "Deploying the mariadb galera stack..."
  echo
  ./docker-env stack deploy -c ${STACK_FOLDER}/mariadb-galera.yml $STACK_NAME
  if [ $? -ne 0 ]; then
    echo "Failure deploying mariadb galera master stack"
    exit 1
  fi
  echo
  echo -n "Waiting for the galera seed node to start up..."
  while [ "`./docker-env service ls | grep ${STACK_NAME}_galera-seed | grep 1/1 | wc -l | xargs`" != "1" ]
  do
    echo -n "."
    sleep 5s
  done
  echo

  echo "Scaling up permanent galera nodes..."
  echo
  ./docker-env service scale --detach ${STACK_NAME}_galera-node1=1
  ./docker-env service scale --detach ${STACK_NAME}_galera-node2=1
  ./docker-env service scale --detach ${STACK_NAME}_galera-node3=1
  if [ $? -ne 0 ]; then
    echo "Failure scaling up remaining galera-node containers"
    exit 1
  fi
  echo
  echo -n "Waiting for permanent galera nodes to start up..."
  while [ "`./docker-env service ls | grep ${STACK_NAME}_galera-node | grep 1/1 | wc -l | xargs`" != "3" ]
  do
    echo -n "."
    sleep 3s
  done
  echo

  echo "Allocating 1m for the initial cluster data sync..."
  sleep 60s
  echo
  
  echo "Removing seed node..."
  echo
  ./docker-env service rm ${STACK_NAME}_galera-seed
  echo
  
fi

echo "Starting the galera haproxy..."
echo
./docker-env service scale --detach ${STACK_NAME}_galera-haproxy=1
echo -n "Waiting for the galera haproxy to startup..."
while [ "`./docker-env service ls | grep ${STACK_NAME}_galera-haproxy | grep 1/1 | wc -l | xargs`" != "1" ]
do
  echo -n "."
  sleep 3s
done
echo

sleep 5s

DB_HOST=`echo $DOCKER_HOST | sed 's/:.*//'`

echo
echo "Galera WSREP Cluster Info:"
echo "--------------------------"
mysql -h $DB_HOST  -u root --password=`cat .secrets/mysql_root_password` < util/cluster-info.sql
if [ $? -ne 0 ]; then
  echo
  echo "Failure deploying mariadb galera!"
  echo
else
  echo "Closing 3306 on the galera haproxy... use db-open and db-close scripts for data loading"
  ./docker-env service update --detach --publish-rm 3306 ${STACK_NAME}_galera-haproxy
  sleep 10s
  echo
  echo "MariaDB Galera Cluster: ${STACK_NAME} Successfully deployed!"
  echo
fi



